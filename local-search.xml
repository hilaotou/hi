<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>关于hexo插件的安装与卸载</title>
    <link href="/2021/08/27/12/"/>
    <url>/2021/08/27/12/</url>
    
    <content type="html"><![CDATA[<p>  话说用这个hexo一段时间之后，总想着能不能功能上更加的完善和多姿多彩。所以避免不了需要安装一些hexo插件才行，但是有时候安装了过多的hexo插件会造成不必要的错误提示。</p><span id="more"></span><h2 id="安装hexo插件的方法"><a href="#安装hexo插件的方法" class="headerlink" title="安装hexo插件的方法"></a>安装hexo插件的方法</h2><p>一般安装hexo插件的方法都是在插件名称前面加入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install &lt;你的插件名&gt;<br></code></pre></td></tr></table></figure><p>所以安装任意hexo插件的方法，我估计在网上随便一搜都有一大把，但是当你安装上了某一个插件之后，你会发现这个插件会跟你使用的hexo主题或者你的hexo设置的某一项发生<strong>冲突</strong>所以有时候我们得卸载掉这个插件。</p><p>那这个就有点伤脑筋了！毕竟对于我这种文化程度极低的人来说，这绝对是一件麻烦事！</p><p>所以我在网上找到了卸载hexo插件的方法。</p><h2 id="卸载hexo插件的方法"><a href="#卸载hexo插件的方法" class="headerlink" title="卸载hexo插件的方法"></a>卸载hexo插件的方法</h2><p>卸载hexo插件的方法其实和安装hexo插件的方法类似，都是在插件名称前面加入一段小代码，代码就在下面，如果需要请自行复制粘贴哈。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm uninstall &lt;你的插件名&gt;<br></code></pre></td></tr></table></figure><hr><p>方法介绍完毕，🖊~~~~~</p>]]></content>
    
    
    <categories>
      
      <category>随手笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的小站也可以评论啦</title>
    <link href="/2021/08/17/11/"/>
    <url>/2021/08/17/11/</url>
    
    <content type="html"><![CDATA[<p>  话说我看到别人家的博客都有评论的系统，但是咱的小站就没有这个评论系统，后来我也网上搜了一些资料，但是就咱的文化水平，感觉看起来就是一《天书》啊！</p><span id="more"></span><p>其实在网上搜的时候，咱一直把关键词定在《gitalk》这个关键词了，虽然网上的教程不少，但是对于我这种没啥文化的人来说，只能是一知半解的懵逼状态中浏览和摸索，直到我把关键词里加入了我使用的主题名字《fluid》，正巧看到《fluid主题配置》这篇文章。《PS：fluid主题虽然支持：<strong>disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo | cusdis</strong>  等众多评论系统，但是我文化低啊，根本不会自己弄啊，尤其是看hexo帮助文件，更加感觉是一部天书无疑。》</p><p>fluid主题增加gitalk评论系统的链接如下：</p><p><a href="https://atroxqw.github.io/posts/2020/12/31/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/#7-%E9%9B%86%E6%88%90%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD-gitalk">https://atroxqw.github.io/posts/2020/12/31/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/#7-%E9%9B%86%E6%88%90%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD-gitalk</a></p><p>这个正是我要找的，🤭，这种教程正好对应我这种没啥文化的人的操作。</p><p>所以我直接复制该作者的《集成评论功能gitalk》这一段教程。</p><p>教程如下：</p><hr><h3 id="集成评论功能-gitalk"><a href="#集成评论功能-gitalk" class="headerlink" title="集成评论功能(gitalk)"></a>集成评论功能(gitalk)</h3><h4 id="7-1-注册OAuth-Application"><a href="#7-1-注册OAuth-Application" class="headerlink" title="7.1 注册OAuth Application"></a>7.1 注册OAuth Application</h4><p><a href="https://github.com/settings/applications/new">官方入口</a>，点击进入来<strong>注册一个新的OAuth Application</strong></p><p><a href="https://cdn.jsdelivr.net/gh/AtroxQW/jsDeliverCDN@1.0/source/_posts/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/new_application.png"><img src="https://cdn.jsdelivr.net/gh/AtroxQW/jsDeliverCDN@1.0/source/_posts/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/new_application.png" alt="注册OAuth Application">注册OAuth Application</a></p><h4 id="7-2-注册后获取秘钥"><a href="#7-2-注册后获取秘钥" class="headerlink" title="7.2 注册后获取秘钥"></a>7.2 注册后获取秘钥</h4><p>点击注册后，会进入新页面。显示我们的OAuth <strong>Application</strong>的 <strong>Client ID</strong> 和 尚未生成的 <strong>Client secrets</strong></p><p>，点击 <strong>Generate a new client secret</strong> 按钮生成秘钥即可。</p><p><a href="https://cdn.jsdelivr.net/gh/AtroxQW/jsDeliverCDN@1.0/source/_posts/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/Client_id_secrets.png"><img src="https://cdn.jsdelivr.net/gh/AtroxQW/jsDeliverCDN@1.0/source/_posts/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/Client_id_secrets.png" alt="获取秘钥"></a></p><p><a href="https://cdn.jsdelivr.net/gh/AtroxQW/jsDeliverCDN@1.0/source/_posts/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/Client_id_secrets.png">获取秘钥</a></p><h4 id="7-3-博客集成gitalk"><a href="#7-3-博客集成gitalk" class="headerlink" title="7.3 博客集成gitalk"></a>7.3 博客集成gitalk</h4><p>在<code>_config.fluid.yml</code>中<strong>开启并指定评论模块</strong>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">comments:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">gitalk</span><br><span class="hljs-string">Copy</span><br></code></pre></td></tr></table></figure><p>然后在下方还要设<strong>置对应评论模块的参数</strong>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">gitalk:</span><br>  <span class="hljs-attr">clientID:</span> <span class="hljs-string">af550312a411b96c64b9</span>     <span class="hljs-comment">#刚才的ClientID</span><br>  <span class="hljs-attr">clientSecret:</span> <span class="hljs-string">f11934265fd18324cb2d9fd605d7d445207a3e52</span>   <span class="hljs-comment">#刚才的clientSecret</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">&#x27;gitalk&#x27;</span>                                     <span class="hljs-comment">#刚才取的名</span><br>  <span class="hljs-attr">owner:</span> <span class="hljs-string">&#x27;AtroxQW&#x27;</span>                            <span class="hljs-comment">#github的用户名</span><br>  <span class="hljs-attr">admin:</span> [<span class="hljs-string">&#x27;AtroxQW&#x27;</span>]<br>  <span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span><br>  <span class="hljs-attr">labels:</span> [<span class="hljs-string">&#x27;Gitalk&#x27;</span>]<br>  <span class="hljs-attr">perPage:</span> <span class="hljs-number">10</span><br>  <span class="hljs-attr">pagerDirection:</span> <span class="hljs-string">last</span><br>  <span class="hljs-attr">distractionFreeMode:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">createIssueManually:</span> <span class="hljs-literal">true</span><br><span class="hljs-string">Copy</span><br></code></pre></td></tr></table></figure><h4 id="7-4-初始化issue"><a href="#7-4-初始化issue" class="headerlink" title="7.4 初始化issue"></a>7.4 初始化issue</h4><p>每次发表一篇博客，都需要我们作者<strong>初始化issue</strong>，初始化后评论就会在github上看到。</p><p><a href="https://cdn.jsdelivr.net/gh/AtroxQW/jsDeliverCDN@1.0/source/_posts/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/init_issue.png"><img src="https://cdn.jsdelivr.net/gh/AtroxQW/jsDeliverCDN@1.0/source/_posts/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/init_issue.png" alt="初始化issue">初始化issue</a></p><hr><p>同时感谢该作者的分享哈，最后放上该作者的博文链接：</p><p><a href="https://atroxqw.github.io/posts/2020/12/31/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/#7-%E9%9B%86%E6%88%90%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD-gitalk">https://atroxqw.github.io/posts/2020/12/31/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/#7-%E9%9B%86%E6%88%90%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD-gitalk</a></p>]]></content>
    
    
    <categories>
      
      <category>随手笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【盛世中华】超燃！数百位8KRAW摄影师联合摄制，10分钟带你看绝美祖国大好河山！</title>
    <link href="/2021/08/14/10/"/>
    <url>/2021/08/14/10/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本就处在世外桃源，何求西方极乐世界。－－《8KRAW》</p></blockquote><p>在逛bilibili的时候看到了《【盛世中华】超燃！数百位8KRAW摄影师联合摄制，10分钟带你看绝美祖国大好河山！》这个视频，本来想好好的夸一下这个视频如何如何好的，但是咱TM文化有限！所以只能一句牛逼克拉斯这个概括了，啥也不说了，直接转载这个视频哈，自行观看。</p><iframe src="//player.bilibili.com/player.html?aid=69241910&bvid=BV19E41197Kc&cid=120004475&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"width="100%"  height="580" quality="high"> </iframe><p>8KRAW摄影师联合摄制，10分钟的山河壮阔，960万平方公里的华夏大地，14亿人民的生息之所。 谨以此片，献礼新中国成立七十周年！ </p><p>片名：盛世中华</p><p> 策划：王源宗、LingChen </p><p>视频制作：LingChen </p><p>出品：8KRAW.COM </p><p>视频拍摄/图：8KRAW</p><p>摄影师（名单见片尾） </p><p>制片统筹/文：鹿游原 </p><p>BGM：Northwind by BrunuhVile、Dance of the River Spirits by Marcus Warner</p><hr><p>超清版本：<a href="https://www.bilibili.com/video/BV19E41197Kc?zw">https://www.bilibili.com/video/BV19E41197Kc?zw</a></p>]]></content>
    
    
    <categories>
      
      <category>转载文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>8KRAW</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浅谈《鸿蒙OS》的使用感受</title>
    <link href="/2021/08/11/9/"/>
    <url>/2021/08/11/9/</url>
    
    <content type="html"><![CDATA[<p>  在这篇使用感受开始之前我先放上一段音乐哈，陶冶一下咱这暴躁的小脾气。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=100% height=86 src="//music.163.com/outchain/player?type=2&id=149229&auto=1&height=66"></iframe><span id="more"></span><p>话说在8月2日升级到鸿蒙OS之后，一直到现在的使用感受就是流畅，尤其是我这种华为nova4e的手机，在升级鸿蒙OS之后整体的流畅一直表现的非常棒。</p><p>在没升级鸿蒙OS之前，我这部手机经常性的出现卡顿和等待服务响应。那段时间的卡顿就想换手机了，毕竟是19年春季发布的机型了！</p><p>但是升级鸿蒙OS之后，我发现就我这个手机还真有可能在”战“一年。尤其是现在打开某些APP，已经没有那些卡顿和等待服务响应的现象了，现在这部手机已经服役我两年多了，也是时候该升级换代了。</p><p>话说现在使用的这部华为nova4e是我使用华为的第二部手机了，所以下一部手机铁定是华为了，毕竟使用它我个人感觉还是蛮稳当和习惯的。<del>不像那些请流量明显打广告的手机，用个一年半载的就卡的不要不要的。还有那些一堆像病毒一样不经过你同意就安装进来的手机，真的很让人反感。</del>😒</p><p>所以，加油，华为。🤞</p>]]></content>
    
    
    <categories>
      
      <category>随手笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>鸿蒙OS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>咱的手机也升级了鸿蒙OS系统</title>
    <link href="/2021/08/03/8/"/>
    <url>/2021/08/03/8/</url>
    
    <content type="html"><![CDATA[<h2 id="升级鸿蒙OS"><a href="#升级鸿蒙OS" class="headerlink" title="升级鸿蒙OS"></a>升级鸿蒙OS</h2><p>话说最近一直在网上看到很多的报道说鸿蒙OS的流畅度多好多好，搞得我也是心里痒痒的！</p><p>所以在看华为的《花粉俱乐部》里有我手机型号的升级推送，果断的点了加入内测。</p><span id="more"></span><p>8月2日的半夜，也就是昨晚上看到了可以升级的推送消息。果断的点了立即升级的按钮。但是后边具体是怎么升级的我给忘了，因为昨晚上跟朋友踩箱罐啤酒了！所以昨晚上具体的记忆真的找不回来了！！！！！！</p><p>但是今儿早上睁开眼拿手机看时间的时候，发现已经升级成功了！！！！</p><p>所以今天跟朋友聊天的时候，朋友问我咋升级的鸿蒙OS！！！！</p><p>我说我睡了一觉鸿蒙OS已经升级好了。😀</p><p><img src="https://gitee.com/by365/img/raw/master/img/1000.jpg" alt="咱的手机也升级了鸿蒙OS系统"></p><hr><h2 id="鸿蒙OS使用体验"><a href="#鸿蒙OS使用体验" class="headerlink" title="鸿蒙OS使用体验"></a>鸿蒙OS使用体验</h2><p>今天使用了一天的鸿蒙OS系统，发现比原来的那个系统要好，就像那个广告语一样《纵享丝滑》。</p><p>其实现在想想还是挺后怕的，因为手机里有些东西是不能够丢失和损害的，而且我也没有去备份这份资料。但是通过今天的查看和发现，这种无缝的升级真的太棒了，手机里的资料完全无损，今天整体的使用感受就是太棒了。感觉就和新手机一样。</p><p>看来华为P50今年要安排上了。😁😁😁😁😁😁😁😁</p>]]></content>
    
    
    <categories>
      
      <category>随手笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>鸿蒙OS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>最近在网上听的音乐</title>
    <link href="/2021/07/30/7/"/>
    <url>/2021/07/30/7/</url>
    
    <content type="html"><![CDATA[<p>  话说，不知道你们在网上看东西的时候，有没有这个习惯，就是边放音乐边看别人的技术文章。</p><p>反正我个人的习惯是听一些音乐，尤其是轻音乐这种类型的。</p><p>我个人认为这种类型的音乐对我个人还是蛮有帮助的，第一：这种类型的轻音乐可以舒缓个人的情绪。第二：可以屏蔽外界的那种杂音，尤其是你在的周围环境，有很多讨厌的声音这种的。第三：当这样的音乐响起的时候，可以更加的专注你所专注的东西。尤其是你在编辑你博客文章的时候，可以更加的增加你自己思维的跳跃，能让你更加的专注你要表达的东西。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=100% height=86 src="//music.163.com/outchain/player?type=2&id=496869422&auto=1&height=66"></iframe><hr><p>话说现在网易云音乐现在不能分享收藏的整个歌单了，感觉好无语·······</p>]]></content>
    
    
    <categories>
      
      <category>音乐推荐</category>
      
    </categories>
    
    
    <tags>
      
      <tag>音乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搞了一个头像</title>
    <link href="/2021/07/28/6/"/>
    <url>/2021/07/28/6/</url>
    
    <content type="html"><![CDATA[<p>  话说我感觉我这个小破站点已经弄得差不多了，但是后来发现了一个问题，因为我是使用了hexo主题： <a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a> 。</p><p>所以我发现我的这个小破站点没有头像~~~~·</p><p>所以在百度的搜索中发现了一个我个人认为比较好看的，并且符合我这个小破站点的头像。</p><p><img src="https://gitee.com/by365/img/raw/master/img/avatar.jpg"></p><p>所以先就这样将就着用吧，嘎嘎</p>]]></content>
    
    
    <categories>
      
      <category>随手笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>头像</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo下Markdown的使用</title>
    <link href="/2021/07/27/5/"/>
    <url>/2021/07/27/5/</url>
    
    <content type="html"><![CDATA[<h2 id="一、创建文章"><a href="#一、创建文章" class="headerlink" title="一、创建文章"></a><strong>一、创建文章</strong></h2><p>在站点文件夹中打开 git bash，输入如下命令创建文章，其中 <code>title</code> 为文章的标题</p><p><em>$ hexo new “title”</em></p><p>当输入命令后，就会在 <code>source/_post</code> 文件夹下创建一个文件，命名为：<code>title.md</code></p><p>这个文件就是将要发布到网站上的原始文件，用于记录文章内容。</p><h2 id="二、编写文章"><a href="#二、编写文章" class="headerlink" title="二、编写文章"></a><strong>二、编写文章</strong></h2><h3 id="Markdown-简介"><a href="#Markdown-简介" class="headerlink" title="Markdown 简介"></a>Markdown 简介</h3><p>*Markdown 是一种可以使用普通文本编辑器编写的 <strong>标记语言</strong>，通过简单的 <strong>标记语法</strong>，它可以使普通文本内容具有一定的格式*</p><h3 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h3><h4 id="Typora-快捷键："><a href="#Typora-快捷键：" class="headerlink" title="Typora 快捷键："></a>Typora 快捷键：</h4><p><em>Ctrl+1：一级标题</em></p><p><em>Ctrl+2：二级标题</em></p><p><em>Ctrl+3：三级标题</em></p><p>Ctrl+4：四级标题</p><p>Ctrl+5：五级标题</p><p>Ctrl+6 ：六级标题</p><p><em>Ctrl+0：段落</em></p><h4 id="Markdown-语法："><a href="#Markdown-语法：" class="headerlink" title="Markdown 语法："></a>Markdown 语法：</h4><hr><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-strong">*斜体*</span><br><span class="hljs-strong">**粗体**</span><br><span class="hljs-strong">***加粗斜体**</span>*<br>~~删除线~~<br>1234<br></code></pre></td></tr></table></figure><p><strong>Typora 快捷键：</strong></p><p>Ctrl+I：斜体</p><p>Ctrl+B：粗体</p><p>Ctrl+U：下划线</p><p>Alt+Shift+5：删除线</p><h3 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h3><h4 id="文字引用"><a href="#文字引用" class="headerlink" title="文字引用"></a>文字引用</h4><blockquote><p><strong>Markdown 语法：</strong></p><p>在Typora中输入””” + 回车，并在后面选择一个语言名称即可语法高亮。</p><blockquote><p>语法高亮:</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta">&gt;</span> <span class="javascript">&gt; &gt; def helloWorld():</span><br><span class="hljs-meta">&gt;</span> <span class="javascript">&gt; &gt;     print <span class="hljs-string">&#x27;hello, world&#x27;</span></span><br><span class="hljs-meta">&gt;</span> <span class="javascript">&gt; &gt; </span><br><span class="hljs-meta">&gt;</span> <span class="javascript">&gt;</span><br></code></pre></td></tr></table></figure></blockquote></blockquote><h4 id="表"><a href="#表" class="headerlink" title="表"></a>表</h4><blockquote><p>输入<code>| 表头1 | 表头2 |</code>并回车。即可将创建一个包含两列的表，然后就像操作Word文档一样设置表格即可，没必要知道Markdown的复杂语法，因为这些语法会由Typora自动生成。效果如下：</p><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table></blockquote><h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><blockquote><p>输入<code>***</code>或<code>---</code> 再按回车即可绘制一条水平线，如下：</p><hr><p>链接</p><p>内部链接</p><blockquote><p>这是一个带有标题属性的<a href="http://naka.club/">链接</a>.<br>这是一个没有标题属性的<a href="https://www.dazhuanlan.com/2019/12/14/5df3b9db55a34/naka.club/">链接</a></p></blockquote><p>效果如下：</p><p>这是一个带有标题属性的<a href="http://example.com/">链接</a>.<br>这是一个没有标题属性的<a href="http://example.net/">链接</a></p><p>Typora 快捷键：**</p><p>行内代码：Ctrl+Shift+`</p><p>多行代码：Ctrl+Shift+K</p></blockquote><h4 id="代码标记"><a href="#代码标记" class="headerlink" title="代码标记"></a>代码标记</h4><blockquote><p>标记代码使用反引号，即在英文输入法下，ESC键下面和1键左边的符号——`</p><p>使用该<code>printf()</code>功能。<br>效果如下：<br>使用该<code>printf()</code>功能。</p></blockquote><h4 id="删除线-中间没有空格"><a href="#删除线-中间没有空格" class="headerlink" title="删除线(中间没有空格)"></a>删除线(中间没有空格)</h4><blockquote><p>~ <del>删除线</del> ~</p></blockquote><blockquote><p>效果如下：</p><p><del>删除线</del></p></blockquote><h4 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h4><blockquote><p>下划线</p><p>效果如下：</p><p>下划线</p></blockquote><h3 id="内置样式"><a href="#内置样式" class="headerlink" title="内置样式"></a>内置样式</h3><h4 id="分割线和空行"><a href="#分割线和空行" class="headerlink" title="分割线和空行"></a>分割线和空行</h4><blockquote><p>这是文字</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta">&gt;</span> <span class="javascript">&lt;hr /&gt;</span><br><span class="hljs-meta">&gt;</span><br></code></pre></td></tr></table></figure></blockquote><blockquote><p>上面是分隔线</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta">&gt;</span> <span class="javascript">&lt;br /&gt;</span><br><span class="hljs-meta">&gt;</span><br></code></pre></td></tr></table></figure></blockquote><blockquote><p>上面是空行</p></blockquote><h3 id="文本居中的引用"><a href="#文本居中的引用" class="headerlink" title="文本居中的引用"></a>文本居中的引用</h3><p>此标签将生成一个带上下分割线的引用，同时引用内文本将自动居中。 文本居中时，多行文本若长度不等，视觉上会显得不对称，因此建议在引用单行文本的场景下使用。 例如作为文章开篇引用 或者 结束语之前的总结引用。</p><h4 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h4><ul><li>HTML方式：使用这种方式时，给 <code>img</code> 添加属性 <code>class=&quot;blockquote-center&quot;</code> 即可。</li><li>标签方式：使用 <code>centerquote</code> 或者 简写 <code>cq</code>。</li></ul><p>此标签要求 NexT 的版本在 <strong>0.4.5</strong> 或以上。 若你正在使用的版本比较低，可以选择使用 <code>HTML</code> 方式。</p><p><strong>标签调用方法</strong></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="xml"><span class="hljs-comment">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span></span><br><span class="xml"><span class="hljs-comment">&lt;!-- 其中 class=&quot;blockquote-center&quot; 是必须的 --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">blockquote</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;blockquote-center&quot;</span>&gt;</span>blah blah blah<span class="hljs-tag">&lt;/<span class="hljs-name">blockquote</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml"><span class="hljs-comment">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">centerquote</span> %&#125;</span><span class="xml">blah blah blah</span><span class="hljs-template-tag">&#123;% <span class="hljs-name">endcenterquote</span> %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml"><span class="hljs-comment">&lt;!-- 标签别名 --&gt;</span></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">cq</span> %&#125;</span><span class="xml"> blah blah blah </span><span class="hljs-template-tag">&#123;% <span class="hljs-name">endcq</span> %&#125;</span><br></code></pre></td></tr></table></figure><h4 id="效果示例"><a href="#效果示例" class="headerlink" title="效果示例"></a>效果示例</h4><p><a href="http://theme-next.iissnan.com/uploads/tags/blockquote-center.png"><img src="http://theme-next.iissnan.com/uploads/tags/blockquote-center.png" alt="Center Blockquote Tag"></a></p><p><a href="http://theme-next.iissnan.com/uploads/tags/blockquote-center.png">Center Blockquote Tag</a></p><h3 id="突破容器宽度限制的图片"><a href="#突破容器宽度限制的图片" class="headerlink" title="突破容器宽度限制的图片"></a>突破容器宽度限制的图片</h3><p>当使用此标签引用图片时，图片将自动扩大 26%，并突破文章容器的宽度。 此标签使用于需要突出显示的图片, 图片的扩大与容器的偏差从视觉上提升图片的吸引力。 此标签有两种调用方式（详细参看底下示例）：</p><h4 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h4><ul><li>HTML方式：使用这种方式时，为 <code>img</code> 添加属性 <code>class=&quot;full-image&quot;</code>即可。</li><li>标签方式：使用 <code>fullimage</code> 或者 简写 <code>fi</code>， 并传递图片地址、 <code>alt</code> 和 <code>title</code> 属性即可。 属性之间以逗号分隔。</li></ul><p>此标签要求 NexT 的版本在 <strong>0.4.5</strong> 或以上。 若你正在使用的版本比较低，可以选择使用 <code>HTML</code> 方式。<br>如果要在图片下显示图片的标题，请使用 标签方式 并给定 <code>title</code> 属性。</p><p><strong>标签调用方法</strong></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="xml"><span class="hljs-comment">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span></span><br><span class="xml"><span class="hljs-comment">&lt;!-- 其中 class=&quot;full-image&quot; 是必须的 --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/image-url&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;full-image&quot;</span> /&gt;</span></span><br><span class="xml"></span><br><span class="xml"><span class="hljs-comment">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">fullimage</span> /image-url, alt, title %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml"><span class="hljs-comment">&lt;!-- 别名 --&gt;</span></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">fi</span> /image-url, alt, title %&#125;</span><br></code></pre></td></tr></table></figure><h4 id="效果示例-1"><a href="#效果示例-1" class="headerlink" title="效果示例"></a>效果示例</h4><p><a href="http://theme-next.iissnan.com/uploads/tags/full-image.jpg"><img src="http://theme-next.iissnan.com/uploads/tags/full-image.jpg" alt="img"></a></p><p><a href="http://theme-next.iissnan.com/uploads/tags/full-image.jpg">img</a></p><h3 id="Bootstrap-Callout-由-ivan-nginx-贡献"><a href="#Bootstrap-Callout-由-ivan-nginx-贡献" class="headerlink" title="Bootstrap Callout 由 ivan-nginx 贡献"></a>Bootstrap Callout 由 <a href="https://github.com/iissnan/hexo-theme-next/pull/1160">ivan-nginx</a> 贡献</h3><p>这些样式出现在 <a href="http://getbootstrap.com/">Bootstrap 的官方文档</a>中。</p><h4 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h4><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">note</span> class_name %&#125;</span><span class="xml"> Content (md partial supported) </span><span class="hljs-template-tag">&#123;% <span class="hljs-name">endnote</span> %&#125;</span><br></code></pre></td></tr></table></figure><p>其中，<code>class_name</code> 可以是以下列表中的一个值：</p><ul><li><code>default</code></li><li><code>primary</code></li><li><code>success</code></li><li><code>info</code></li><li><code>warning</code></li><li><code>danger</code></li></ul><h4 id="效果示例-2"><a href="#效果示例-2" class="headerlink" title="效果示例"></a>效果示例</h4><p><a href="https://gitee.com/kzcy/pic/raw/master/img/bootstrap-callout.png"><img src="https://gitee.com/kzcy/pic/raw/master/img/bootstrap-callout.png" alt="img"></a></p><p><a href="https://gitee.com/kzcy/pic/raw/master/img/bootstrap-callout.png">img</a></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://www.dazhuanlan.com/2019/12/14/5df3b9db55a34/">https://www.dazhuanlan.com/2019/12/14/5df3b9db55a34/</a></li><li><a href="http://theme-next.iissnan.com/tag-plugins.html">http://theme-next.iissnan.com/tag-plugins.html</a></li></ol><hr><blockquote><p>这篇文章转载自：<a href="https://kzcy.gitee.io/2020/08/12/e22a0751302a/">https://kzcy.gitee.io/2020/08/12/e22a0751302a/</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>转载文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搞了一个域名邮箱</title>
    <link href="/2021/07/24/4/"/>
    <url>/2021/07/24/4/</url>
    
    <content type="html"><![CDATA[<p>  话说我这个小破站点建成后，一直状态都在YY自己的小破站有大流量和著作的场景，但是后来想了一下，估计够呛！毕竟自己不是什么大作家或者大名人。</p><p>但是最起码还得看着像样子一点，所以咱们就先慢慢一点点来。</p><span id="more"></span><p>比如：咱先弄个域名邮箱。</p><p>目标决定了，那咱就开始干，在网上搜了一下，目前提供免费域名邮箱服务并且比较稳定的，貌似有<em>腾讯</em>  <em>网易</em> 这两家，我选择的是腾讯的这一家。《因为我域名就是在他们家注册的。》</p><p>我按照网上的步骤准备弄的时候发现，TM的腾讯把QQ邮箱改版了，所以网上的教程基本等于没啥用了，随后又是一顿百度搜索和摸索，终于搞懂怎么弄腾讯这家的域名邮箱了。</p><p>首先打开网址：<a href="https://exmail.qq.com/cgi-bin/readtemplate?t=new_index/versionCmp">https://exmail.qq.com/cgi-bin/readtemplate?t=new_index/versionCmp</a></p><p>选择《开通基础版》随后按照提示去注册就可以了。</p><p>具体的步骤我就不写了，毕竟我也比较懒，感觉生搬硬套的，我在文章中在写出来也生硬。二来也不想给他们免费打广告。《虽然说用了他们的服务还不给他们打广告有点不厚道，但是我心里也哭啊！毕竟想要用他们的域名邮箱还得注册他们家的企业微信，并且还得往手机里又塞了一个APP。所以我就不写怎么注册和步骤了。》</p><p>不过最终还是弄好了。</p><p><a href="mailto:&#x61;&#x64;&#x6d;&#x69;&#x6e;&#x40;&#x6c;&#97;&#x6f;&#116;&#111;&#117;&#46;&#x69;&#99;&#117;">&#x61;&#x64;&#x6d;&#x69;&#x6e;&#x40;&#x6c;&#97;&#x6f;&#116;&#111;&#117;&#46;&#x69;&#99;&#117;</a></p><hr><p>域名邮箱算是弄好了，经过测试也不错，和QQ邮箱的操作一样丝滑。</p>]]></content>
    
    
    <categories>
      
      <category>随手笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>域名邮箱</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo发生error：spawn failed错误的解决方法</title>
    <link href="/2021/07/20/3/"/>
    <url>/2021/07/20/3/</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>因为今天得空，合计弄一下自己的小破站点的关于页面，关于页面编辑好之后，在用hexo的部署命令<em>hexo d</em> 的时候出现了一个<em>err: Error: Spawn failed</em>的错误，这个就有点让我崩溃了，心想着咱弄一个小破站点咋就那么多崩溃的BUG啊！</p><p><img src="https://gitee.com/by365/img/raw/master/img/hexo1.JPG" alt="hexo发生error：spawn failed错误的解决方法"></p><p>感觉好难啊，尤其是像我这种连初中都没毕业的一个文盲，在捣鼓这个小破站点的时候不是这出现问题，就是那里出现问题。</p><p>但是出现问题咱就得解决问题不是么？于是乎用上了咱们的<em>百度大法</em>，找问题的解决方法。</p><p>按照前辈们的解决方案来说，应该是因为<code>git</code>进行<code>push</code>或者<code>hexo d</code>的时候改变了一些<code>.deploy_git</code>文件下的内容。</p><h2 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h2><ol><li>删除<code>.deploy_git</code>文件夹;</li><li>输入<code>git config --global core.autocrlf false</code></li><li>然后，依次执行：<br><code>hexo clean</code><br><code>hexo g</code><br><code>hexo d</code></li></ol><p>问题解决。暴力直接，有效。</p><p>《原文链接：<a href="https://blog.csdn.net/HTL2018/article/details/106876940%E3%80%8B">https://blog.csdn.net/HTL2018/article/details/106876940》</a></p><hr>]]></content>
    
    
    <categories>
      
      <category>随手笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git报错解决：fatal： unable to access&#39;https://github.com/.......&#39;： OpenSSL SSL_read： Connection was reset, errno 10054</title>
    <link href="/2021/07/17/2/"/>
    <url>/2021/07/17/2/</url>
    
    <content type="html"><![CDATA[<p>Git报错解决：fatal： unable to access ‘<a href="https://github.com/.......&#39;">https://github.com/.......&#39;</a>: OpenSSL SSL_read： Connection was reset, errno 10054</p><p>这个错误是在我部署好我的博客以后，过了几天在修改内容的时候，发现的一个错误提示，所以在百度了之后发现的一个解决办法。</p><p>产生原因：一般是这是因为服务器的SSL证书没有经过第三方机构的签署，所以才报错</p><p>参考网上解决办法：解除ssl验证后，再次git即可</p><p><code>git config --global http.sslVerify &quot;false&quot;</code></p><p>因为当时没有截图，所以就没有图片了，但是我在百度的时候，发现的解决这个错误的网址我准备发上来，如果你有需要可直接查看：</p><p><a href="https://www.cnblogs.com/lvhuayan/p/14538106.html">https://www.cnblogs.com/lvhuayan/p/14538106.html</a></p><hr><p>其实也不知道想说点什么！但是这个是laotou.icu的第二篇文章了，记录一下哈。毕竟这个博客从开通到现在还没有内容的输出呢，正所谓有站点无内容，等同于“白扯”。</p>]]></content>
    
    
    <categories>
      
      <category>随手笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>这是第一篇文章记录一下</title>
    <link href="/2021/07/14/1/"/>
    <url>/2021/07/14/1/</url>
    
    <content type="html"><![CDATA[<p>  这是laotou.icu的第一篇文章，所以记录一下哈。</p><p>我这个站点是使用：hexo 搭建</p><p>部署在：GitHub的GitHub pages上面。</p><p>使用的hexo主题是： <a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a></p><p>图片托管在：gitee</p><p><img src="https://gitee.com/by365/img/raw/master/img/20190422-204832-12f4_wps%E5%9B%BE%E7%89%87_2.png"></p><p>文章编写方式：Markdown</p><hr><p>好了，暂时先写到这里吧，个人感觉第一篇文章还是简单的介绍就好了，不说废话哈。</p>]]></content>
    
    
    <categories>
      
      <category>随手笔记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/07/04/hello-world/"/>
    <url>/2021/07/04/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>随手笔记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
